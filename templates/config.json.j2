{{ ansible_managed | comment('cblock') }}

{% set main %}
{
    "log": {
        "access": "{{ log_access }}",
        "error": "{{ log_error }}",
        "loglevel": "{{ log_level }}"
    },
    "inbounds": [
        {
            "port": 12345,
            "tag": "tproxy",
            "protocol": "dokodemo-door",
            "settings": {
                "followRedirect": true,
                "network": "tcp,udp"
            },
            {% if sniffing_enabled %}
            "sniffing": {
                "enabled": true,
                "destOverride": [
                    "http",
                    "tls"
                ]
            },
            {% endif %}
            "streamSettings": {
                "sockopt": {
                    "tproxy": "redirect"
                }
            }
        },
        {
            "port": 5353,
            "tag": "dns",
            "protocol": "dokodemo-door",
            "settings": {
                "address": "{{ "8.8.8.8" if dns_enabled else "114.114.114.114" }}",
                "port": 53,
                "network": "udp"
            }
        },
        {
            "listen": "{{ api_listen }}",
            "port": "{{ api_port }}",
            "tag": "api",
            "protocol": "dokodemo-door",
            "settings": {
                "address": "127.0.0.1"
            }
        }
        {{ v2ray_inbounds | map('to_json') | join(',') }}
    ],
    "dns": {
        "servers": [
            "localhost"
        ]
    },
    "outbounds": [
        {
            "tag": "direct",
            "protocol": "freedom",
            "streamSettings": {
                "sockopt": {
                    "mark": {{ so_mark_direct }}
                }
            }
        },
        {% if forward_mode == '*' %}
            {{ v2ray_processed_outbounds.values() | list | map('to_json') | join(',') }}
        {% else %}
            {{ v2ray_processed_outbounds[forward_mode] | to_json }}
        {% endif %}
    ],
    "routing": {
        "domainStrategy": "{{ domain_strategy }}",
        "balancers": {{ v2ray_balancers | to_json }},
        "rules": [
            {
                "type": "field",
                "inboundTag": ["api"],
                "outboundTag": "api"
            },
            {{ v2ray_routes | map('to_json') | join(',') }}
        ]
    },
    "api": {
        "tag": "api",
        "services": [
            "HandlerService",
            "LoggerService",
            "StatsService"
        ]
    },
    "policy": {
        "levels": {
            "0": {
                "handshake": 2,
                "connIdle": {{ idle_connections_timeout }},
                "uplinkOnly": 0,
                "downlinkOnly": 0,
                "statsUserUplink": false,
                "statsUserDownlink": false
            }
        },
        "system": {
            "statsInboundUplink": true,
            "statsInboundDownlink": true
        }
    },
    "stats": {}
}
{% endset %}

{{ main | from_json | to_json(indent=2) }}
