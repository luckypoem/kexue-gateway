# ------------------------------
# 以下为网络配置，将影响内核或系统参数
# ------------------------------

# 网关主机名（Hostname）。若为空则不设置主机名，即维持默认。
kexue_hostname: ""
# V2ray 服务进程的最大「可打开文件描述符数量」限制。
max_open_files: 2048
# 是否完全禁用 IPv6。
disable_all_ipv6: true
# systemd-resolved 服务配置。可选项 stopped 或 direct。
systemd_resolved: stopped

# 是否确保静态 IP。暂时仅支持 Armbian，不支持 Ubuntu Server。
ensure_static_ip: true
# 网关自身 DNS 服务器。
local_dns_server: 1.1.1.1
# 上游网关 IP 地址。可不填，将尝试从默认路由中解析。
local_gateway_ip: ""

# ------------------
# 以下为 IPTables 配置
# ------------------

# 是否转发本地流量。启用后，网关自身的流量将与其它客户端流量享有同样的转发规则。
local_traffic: true
# 是否重定向非本机 UDP 流量。暂时不兼容 Armbian。
udp_enabled: false
# 是否开启 DNS 劫持。开启后，DNS 查询请求（目标端口为 53 的 UDP 流量）将会被强制重定向至网关的 DNS 服务。
# 可在客户端无法修改 DNS 服务器时使用（例如 Chromecast）。
# 若客户端 DNS 服务器处于同一子网，通常该选项无效，流量会直达同一子网内的目标而不经过网关。
dns_hijacking: false
# SO_MARK 设置。用于 iptables 甄别流量来源，一般无需修改。
so_mark_direct: 255
so_mark_forward: 254
# 特殊 IP 地址（段）。完整列表请参见 RFC5735。
# 目标 IP 属于这些 IP 段的流量将不会进入 V2ray，而是直接由 iptables RETURN。
special_addresses:
  - 0.0.0.0/8
  - 10.0.0.0/8
  - 127.0.0.0/8
  - 169.254.0.0/16
  - 172.16.0.0/12
  - 192.168.0.0/16
  - 224.0.0.0/4
  # - 240.0.0.0/4
  - 255.255.255.255

# -------------------------------------------
# 以下为 DNSMASQ 配置，将影响 DHCP 服务和 DNS 服务
# -------------------------------------------

# DNSMASQ 监听端口。默认为全部。
dnsmasq_interfaces: []

# 是否启用 DHCP 服务。可用于部分无法修改 DHCP 选项的路由器固件，详情参见 Wiki。
dhcp_enabled: false
# DHCP 服务 IP 范围。
dhcp_range: 192.168.0.50,192.168.0.150,255.255.255.0,1h
# DHCP 选项。
dhcp_options:
  - "dns-server,{{ ansible_default_ipv4.address }}"

# 针对国内域名的 DNS 上游服务器。
dns_china_upstreams:
  - 114.114.114.114
  - 114.114.115.115
  - 180.76.76.76

# 需从国内域名列表内排除的域名。
dns_china_excludes:
  # - alibabacloud.com

# ---------------------------------------
# 以下为 V2ray 配置，详情可参考 V2ray 官方文档
# ---------------------------------------

# V2ray 发行包路径。可在 https://github.com/v2ray/v2ray-core/releases 下载。
v2ray_archive: dist/v2ray-linux-arm64.zip
# V2ray 安装路径。
v2ray_install_path: /usr/local/v2ray

# DNS 流量代理服务器。若为空则不通过代理服务器发送 DNS 查询请求。
dns_forward_outbound: ""
# SOCKS 代理端口。该端口提供的代理服务与其它流量享有同样的转发规则。
socks_proxy_port: 1080
# HTTP 代理端口。该端口提供的代理服务与其它流量享有同样的转发规则。
http_proxy_port: 8080

# 多路复用数量。可指定单条 TCP 连接实际承载的连接数，若等于 0，则关闭多路复用。
mux_concurrency: 0
# DNS 上游服务器。
dns_upstream: "{{ local_dns_server }}"
# 是否开启嗅探。当启用时，将监测 HTTP 和 TLS（HTTPS）流量的目标域名，可用于路由规则匹配。
sniffing_enabled: true
# 域名路由策略。若为 IPOnDemand，会将域名通过内置的 DNS 解析为 IP 后，参与包含 IP 条件的路由规则匹配。
domain_strategy: IPOnDemand
# 空闲连接超时时间（单位：秒）。若某 TCP 连接在该时间内未传输任何数据（包括上行和下行），则中断该连接。
idle_connections_timeout: 300
# 是否开启 TCP Fast Open。
tcp_fast_open: true

# 访问日志路径。
log_access: /dev/null
# 错误日志路径。
log_error: /var/log/v2ray.log
# 日志等级。可选值请参考 V2ray 文档。
log_level: warning
